---
title: "Week 4 Homework"
format:
   gfm:
     html-math-method: webtex
editor: visual
execute: 
  message: false
  warning: false
---

## CCDF Exponents

```{r}
#| layout-ncol: 2
library(tidyverse)

google_data_raw <- read_table(here::here("Week_3", "Data", "vocab_cs_mod.txt"),
                              col_names = c("k", "Nk"))

data_cprob <- google_data_raw |> 
  arrange(desc(k)) |> 
  #mutate(total = sum(Nk)) |> 
  # mutate(prob = Nk/total) |> 
  #mutate(c_prob = cumsum(prob)) 
  mutate(c_count = cumsum(Nk)) 

data_cprob |> 
  ggplot(aes(log10(k), log10(c_count))) + geom_point() +
  labs(title = "Complementary Cumulatuve Distribution Function - Google Word Frequencies",
       x = "K (log10)", y = "Nk > k (log10)") +
  theme_light()

ggsave(here::here("Week_4", "Plots", "ccdf_google_word.png"))

lm(log10(c_count) ~ log10(k), data = data_cprob) |> 
  broom::tidy() |>
  select(term, estimate, std.error) |> 
  knitr::kable()


```

scaling regions

log10(k) 0 -\> 7 7 -\> 9

```{r}
data_scaling_regions <- data_cprob |> 
  mutate(region = case_when(log10(k) <= 7 ~ "region_one",
                            log10(k) <= 9 ~ "region_two", 
                            TRUE ~ NA_character_)) |> 
  drop_na()

data_scaling_fits <- data_scaling_regions |> 
  group_nest(region) |> 
  mutate(coeffs = map(data, ~ lm(log10(c_count) ~ log10(k), data = .) |> broom::tidy())) |> 
  select(region, coeffs) |> 
  unnest(coeffs)

data_scaling_fits |> 
  filter(term == "log10(k)") |> 
  mutate(estimate = abs(estimate) - 1) |> 
  mutate(two_sds = std.error*1.96) |> 
  mutate(upper = estimate + two_sds, lower = estimate - two_sds)
```

## CCDF Exponents

Plot

```{r}
raw_wordfreq <- read_table(here::here("Week_3", "Data", "rawwwordfreqs.txt"),
                              col_names = c("k"))

wordfreq_rank <- raw_wordfreq |> 
  mutate(rank = rank(-k))

wordfreq_rank |> 
  slice_sample(n = 5000, weight_by = 1/rank) |> 
  ggplot(aes(log10(rank), log10(k))) + geom_point() + 
  labs(title = "Rank-Size Plot for Google Raw Word Frequencies",
       x = "Rank (log10)", y = "Raw Frequency (log10)") + 
  theme_light()

ggsave(here::here("Week_4", "Plots", "rank_size_raw_google.png"))

```

Fits

```{r}
wordfreq_rank_regions <- wordfreq_rank |> 
    mutate(region = case_when(log10(rank) <= 4 ~ "region_one",
                           TRUE ~ "region_two")) |> 
  drop_na()
  
word_freq_fits <- wordfreq_rank_regions |> 
  group_nest(region) |> 
  mutate(coeffs = map(data, ~ lm(log10(k) ~ log10(rank), data = .) |> broom::tidy())) |> 
  select(region, coeffs) |> 
  unnest(coeffs)

word_freq_fits |> 
  filter(term == "log10(rank)")  |> 
    mutate(two_sds = std.error*1.96) |> 
  mutate(upper = estimate + two_sds, lower = estimate - two_sds)
```

## Baby Name Frequencies

```{r}
#| layout-ncol: 2
library(xtable)

year <- c("1952", "2002")
gender <- c("boys", "girls")

combos <- crossing(year, gender)

raw_data <- combos |> 
  mutate(raw_data = map2(year, gender,  ~ 
                           read_csv(here::here("Week_4", "Data", "data", glue::glue("names-{.y}{.x}.txt")),
                                    col_names = c("name", "gender", "count")) |> 
                           select(-gender))) |> 
  unnest(raw_data) |> 
  group_by(year, gender) |> 
  arrange(desc(count)) |> 
  mutate(rank = row_number())


plot_rank_zipf <- function(df) {
  
  year <- df$year[[1]]
  gender <- df$gender[[1]]
  
  
  df |> 
    ggplot(aes(log10(rank), log10(count))) + geom_point() + 
    labs(title = glue::glue("Size Rank: {year} for {gender}",
                            x = "Rank (log10)", y = "Size (log10)")) +
    theme_light()
  
  ggsave(here::here("Week_4", "Plots", glue::glue("{gender}_{year}_size_rank.png")))
  
  df |> 
    mutate(rank  = log10(rank), count = log10(count)) |> 
    mutate(region = case_when(rank < 1.5 ~ "Region One",
                              TRUE ~ "Region Two")) |> 
    drop_na() |> 
    group_nest(region) |> 
    mutate(coeffs = map(data, ~ lm(count ~ rank, data = .) |> 
      broom::tidy() ))|>
    select(-data) |> 
    unnest(coeffs) |> 
   filter(term == "rank")   |> 
   mutate(year = year, gender = gender) |> 
      mutate(two_sds = std.error*1.96) |> 
    mutate(estimate = abs(estimate)) |> 
  mutate(upper = estimate + two_sds, lower = estimate - two_sds) 
  
}

plot_ccdf <- function(df) {
  
  year <- df$year[[1]]
  gender <- df$gender[[1]]
  
  
 ccdf_data <- df |> 
    count(count) |> 
    rename(k = count, Nk = n) |> 
    arrange(desc(k)) |> 
    mutate(csum_nk = cumsum(Nk)) 
 
 ccdf_data |> 
    ggplot(aes(log10(k), log10(csum_nk))) + geom_point() + 
    labs(title = glue::glue("CCDF: {year} for {gender}"),
                            x = "k (log10)", y = "Freq > K (log10)") +
    theme_light()
  
  ggsave(here::here("Week_4", "Plots", glue::glue("{gender}_{year}ccdf.png")))
  

  ccdf_data |> 
    mutate(k = log10(k), csum_nk = log10(csum_nk)) |> 
    mutate(region = case_when(k < 3.5 ~ "Region One",
                              k < 4.5 ~ "Region Two",
                              TRUE ~ NA_character_)) |> 
    drop_na() |> 
    group_nest(region) |> 
    mutate(coeffs = map(data, ~ lm(csum_nk ~ k, data = .) |> 
      broom::tidy() ))|>
    select(-data) |> 
    unnest(coeffs) |> 
   filter(term == "k") |> 
   mutate(estimate = abs(estimate) - 1) |> 
  mutate(two_sds = std.error*1.96) |> 
  mutate(upper = estimate + two_sds, lower = estimate - two_sds) |> 
   mutate(year = year, gender = gender)
  
  
}

data_grped <- raw_data |> 
  group_by(year, gender) |> 
  group_split() 

zipf_coeffs <- map_dfr(data_grped, plot_rank_zipf) |> 
  select(region, estimate, upper, lower, year, gender)
ccdf_coeffs <- map_dfr(data_grped, plot_ccdf) |> 
  select(region, estimate, upper, lower, year, gender)

zipf_coeffs |> 
  knitr::kable()

ccdf_coeffs |> 
  knitr::kable()

```
